{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1LUoHFVj_t2ztOgFDRtc0gqDq-R78O_RO","timestamp":1667843918158}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Introducción\n","\n","Hello\n","\n","Vamos a utilizar el famoso conjunto de datos del Titanic (disponible en [kaggle](https://www.kaggle.com/c/titanic/overview)). \n","\n","El 15 de abril de 1912, durante su viaje inaugural, el Titanic se hundió después de chocar con un iceberg, matando a 1502 de las 2224 personas a bordo, entre pasajeros y tripulación. \n","\n","Una de las razones de tal pérdida de vidas fue la falta de botes salvavidas. En algunos grupos de personas, como las mujeres, los niños y la clase alta, hubo mayor proporción de sobrevivientes.\n","\n","El conjunto de datos que vamos a utilizar contiene varios registros sobre los pasajeros del Titanic. La etiqueta de clase indica si la persona ha sobrevivido o no. \n","\n","Vamos a ignorar la etiqueta de clase y vamos a agrupar los registros en dos grupos, usando K-means. Luego usaremos la etiqueta para evaluar el rendimiento del clustering."],"metadata":{"id":"H0E6N9dqU1Rc"}},{"cell_type":"markdown","source":["# Recuerda\n","\n","- Ctrl + F9: Ejecutar todas las céldas\n","- Shift + Enter: Completar y ejecutar célda\n","- Hover sobre función: pop-up con documentación"],"metadata":{"id":"CeSHfsOp1Jko"}},{"cell_type":"code","source":["\n"],"metadata":{"id":"DnHAKS4c7rZY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Cargar datos\n","\n","- Importar pandas\n","- Cargar la base de datos 'titanic' desde https://raw.githubusercontent.com/chrisalbon/simulated_datasets/master/titanic.csv\n","- Imprimir los primeros 5 registros de la base de datos\n","\n","\n"],"metadata":{"id":"oDGrz0GiWVkb"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/chrisalbon/simulated_datasets/master/titanic.csv\")\n"],"metadata":{"id":"YBXRimR38A-V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"FZ3MQnKJHSHe","executionInfo":{"status":"ok","timestamp":1667841739816,"user_tz":-60,"elapsed":414,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"b3858d97-7c95-417d-cead-cc2ce0642aee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               Name PClass    Age     Sex  \\\n","0                      Allen, Miss Elisabeth Walton    1st  29.00  female   \n","1                       Allison, Miss Helen Loraine    1st   2.00  female   \n","2               Allison, Mr Hudson Joshua Creighton    1st  30.00    male   \n","3     Allison, Mrs Hudson JC (Bessie Waldo Daniels)    1st  25.00  female   \n","4                     Allison, Master Hudson Trevor    1st   0.92    male   \n","...                                             ...    ...    ...     ...   \n","1308                             Zakarian, Mr Artun    3rd  27.00    male   \n","1309                         Zakarian, Mr Maprieder    3rd  26.00    male   \n","1310                               Zenni, Mr Philip    3rd  22.00    male   \n","1311                               Lievens, Mr Rene    3rd  24.00    male   \n","1312                                 Zimmerman, Leo    3rd  29.00    male   \n","\n","      Survived  SexCode  \n","0            1        1  \n","1            0        1  \n","2            0        0  \n","3            0        1  \n","4            1        0  \n","...        ...      ...  \n","1308         0        0  \n","1309         0        0  \n","1310         0        0  \n","1311         0        0  \n","1312         0        0  \n","\n","[1313 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6b3e72f1-5749-4d14-acef-5b87c430e693\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>PClass</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Allen, Miss Elisabeth Walton</td>\n","      <td>1st</td>\n","      <td>29.00</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Allison, Miss Helen Loraine</td>\n","      <td>1st</td>\n","      <td>2.00</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Allison, Mr Hudson Joshua Creighton</td>\n","      <td>1st</td>\n","      <td>30.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Allison, Mrs Hudson JC (Bessie Waldo Daniels)</td>\n","      <td>1st</td>\n","      <td>25.00</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Allison, Master Hudson Trevor</td>\n","      <td>1st</td>\n","      <td>0.92</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>Zakarian, Mr Artun</td>\n","      <td>3rd</td>\n","      <td>27.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1309</th>\n","      <td>Zakarian, Mr Maprieder</td>\n","      <td>3rd</td>\n","      <td>26.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1310</th>\n","      <td>Zenni, Mr Philip</td>\n","      <td>3rd</td>\n","      <td>22.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1311</th>\n","      <td>Lievens, Mr Rene</td>\n","      <td>3rd</td>\n","      <td>24.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1312</th>\n","      <td>Zimmerman, Leo</td>\n","      <td>3rd</td>\n","      <td>29.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1313 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b3e72f1-5749-4d14-acef-5b87c430e693')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6b3e72f1-5749-4d14-acef-5b87c430e693 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6b3e72f1-5749-4d14-acef-5b87c430e693');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["# EDA básico\n","\n","- ¿Cuantas variables hay en la base de datos?\n","- ¿Hay variables repetidas?\n","- ¿Cuantos registros hay en la base de datos?"],"metadata":{"id":"WTAaANDLWv60"}},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFmDbRSe8kX_","executionInfo":{"status":"ok","timestamp":1664184506832,"user_tz":-120,"elapsed":52,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"e1e04129-cbdd-4b45-db5e-be62af58412c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1313, 6)"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["Imprimimos estadísticas descriptivas básicas:"],"metadata":{"id":"0w4grEPkXaOS"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"TO7cvZsE8oX1","executionInfo":{"status":"ok","timestamp":1667841805395,"user_tz":-60,"elapsed":11,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"90ca1e34-1e41-4c04-e075-7b04ac28190c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Age     Survived      SexCode\n","count  756.000000  1313.000000  1313.000000\n","mean    30.397989     0.342727     0.351866\n","std     14.259049     0.474802     0.477734\n","min      0.170000     0.000000     0.000000\n","25%     21.000000     0.000000     0.000000\n","50%     28.000000     0.000000     0.000000\n","75%     39.000000     1.000000     1.000000\n","max     71.000000     1.000000     1.000000"],"text/html":["\n","  <div id=\"df-f9d1955a-fe5f-427c-bb4b-61500803ec85\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>756.000000</td>\n","      <td>1313.000000</td>\n","      <td>1313.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>30.397989</td>\n","      <td>0.342727</td>\n","      <td>0.351866</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14.259049</td>\n","      <td>0.474802</td>\n","      <td>0.477734</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.170000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>71.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9d1955a-fe5f-427c-bb4b-61500803ec85')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f9d1955a-fe5f-427c-bb4b-61500803ec85 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f9d1955a-fe5f-427c-bb4b-61500803ec85');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["- ¿Por qué no salen todas las variables?\n","- ¿Tiene sentido calcular la desviación típica de SexCode?"],"metadata":{"id":"r9Fw1UMBXlkg"}},{"cell_type":"markdown","source":["Podemos visualizar filas especificas. Por ejemplo,"],"metadata":{"id":"-DJpLhLHYmVm"}},{"cell_type":"code","source":["df.iloc[8:12]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"eR7kKNrL9JIH","executionInfo":{"status":"ok","timestamp":1664184506834,"user_tz":-120,"elapsed":47,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"018a3dd5-02e6-4547-d754-5e633ee7cabf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                Name PClass   Age     Sex  \\\n","8       Appleton, Mrs Edward Dale (Charlotte Lamson)    1st  58.0  female   \n","9                             Artagaveytia, Mr Ramon    1st  71.0    male   \n","10                         Astor, Colonel John Jacob    1st  47.0    male   \n","11  Astor, Mrs John Jacob (Madeleine Talmadge Force)    1st  19.0  female   \n","\n","    Survived  SexCode  \n","8          1        1  \n","9          0        0  \n","10         0        0  \n","11         1        1  "],"text/html":["\n","  <div id=\"df-aed0689b-e71d-498c-a5b9-b4d52e9478b7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>PClass</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Appleton, Mrs Edward Dale (Charlotte Lamson)</td>\n","      <td>1st</td>\n","      <td>58.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Artagaveytia, Mr Ramon</td>\n","      <td>1st</td>\n","      <td>71.0</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Astor, Colonel John Jacob</td>\n","      <td>1st</td>\n","      <td>47.0</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Astor, Mrs John Jacob (Madeleine Talmadge Force)</td>\n","      <td>1st</td>\n","      <td>19.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aed0689b-e71d-498c-a5b9-b4d52e9478b7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aed0689b-e71d-498c-a5b9-b4d52e9478b7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aed0689b-e71d-498c-a5b9-b4d52e9478b7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Podemos filtrar registros según sus valores. Por ejemplo, para elegir a todas las mujeres:"],"metadata":{"id":"25E1tyhKYwWr"}},{"cell_type":"code","source":["df[df['Sex'] == 'female']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"YVftPJVw9Omz","executionInfo":{"status":"ok","timestamp":1668535393221,"user_tz":-60,"elapsed":279,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"8982493c-c799-4663-e7dc-011ebbec6c9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               Name PClass   Age     Sex  \\\n","0                      Allen, Miss Elisabeth Walton    1st  29.0  female   \n","1                       Allison, Miss Helen Loraine    1st   2.0  female   \n","3     Allison, Mrs Hudson JC (Bessie Waldo Daniels)    1st  25.0  female   \n","6                  Andrews, Miss Kornelia Theodosia    1st  63.0  female   \n","8      Appleton, Mrs Edward Dale (Charlotte Lamson)    1st  58.0  female   \n","...                                             ...    ...   ...     ...   \n","1283            Vestrom, Miss Hulda Amanda Adolfina    3rd  14.0  female   \n","1293                              Wilkes, Mrs Ellen    3rd  45.0  female   \n","1304                            Yasbeck, Mrs Antoni    3rd  15.0  female   \n","1306                            Zabour, Miss Hileni    3rd   NaN  female   \n","1307                            Zabour, Miss Tamini    3rd   NaN  female   \n","\n","      Survived  SexCode  \n","0            1        1  \n","1            0        1  \n","3            0        1  \n","6            1        1  \n","8            1        1  \n","...        ...      ...  \n","1283         0        1  \n","1293         1        1  \n","1304         1        1  \n","1306         0        1  \n","1307         0        1  \n","\n","[462 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-a9b259de-d573-4fe9-b056-64f3818df6b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>PClass</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Allen, Miss Elisabeth Walton</td>\n","      <td>1st</td>\n","      <td>29.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Allison, Miss Helen Loraine</td>\n","      <td>1st</td>\n","      <td>2.0</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Allison, Mrs Hudson JC (Bessie Waldo Daniels)</td>\n","      <td>1st</td>\n","      <td>25.0</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Andrews, Miss Kornelia Theodosia</td>\n","      <td>1st</td>\n","      <td>63.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Appleton, Mrs Edward Dale (Charlotte Lamson)</td>\n","      <td>1st</td>\n","      <td>58.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>Vestrom, Miss Hulda Amanda Adolfina</td>\n","      <td>3rd</td>\n","      <td>14.0</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1293</th>\n","      <td>Wilkes, Mrs Ellen</td>\n","      <td>3rd</td>\n","      <td>45.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>Yasbeck, Mrs Antoni</td>\n","      <td>3rd</td>\n","      <td>15.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>Zabour, Miss Hileni</td>\n","      <td>3rd</td>\n","      <td>NaN</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>Zabour, Miss Tamini</td>\n","      <td>3rd</td>\n","      <td>NaN</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>462 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9b259de-d573-4fe9-b056-64f3818df6b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a9b259de-d573-4fe9-b056-64f3818df6b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a9b259de-d573-4fe9-b056-64f3818df6b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["# Datos incompletos\n","\n","¿Faltan datos?"],"metadata":{"id":"uTSrQ3TEgHv1"}},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u_8pSaeb9m1q","executionInfo":{"status":"ok","timestamp":1664184506835,"user_tz":-120,"elapsed":42,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"ad505665-4222-40a6-88d3-8da0d878bedf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name          0\n","PClass        0\n","Age         557\n","Sex           0\n","Survived      0\n","SexCode       0\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["Para hacernos una idea mejor de la variable, dibujamos un histograma de `Age':"],"metadata":{"id":"Q-VqyHAxKuCA"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.hist(df['Age'], bins = 20)\n","import numpy as np\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"DutQbPPt9-lF","executionInfo":{"status":"ok","timestamp":1667841889122,"user_tz":-60,"elapsed":381,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"780d3696-21fa-45ec-8cb9-5e03151d0dde"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Varios métodos (e.g., k-means) no funcionan con valores incompletos. Hay varias formas de abordarlo:\n","\n","* Eliminando las filas con esos valores nulos\n","* Estimar los valores que faltan\n","* Eliminando la variable `Age`\n","\n","Con la primera opción podríamos estar perdiendo información relevante. Para intentar estimar los datos que faltan:\n","\n","*   Asignar un valor constante que tenga sentido en el dominio, y que sea diferente al resto de valores asignados (por ejemplo 0).\n","*   Un valor tomado aleatoriamente de otro registro.\n","*   La media, o la mediana, o la moda, calculada a partir del resto de valores de esa dimensión.\n","*   Un valor estimado por otro modelo de aprendizaje automático.\n","\n","`Pandas` ofrece la función `fillna()` para asignar un valor específico a aquellos campos vacios. Vamos a aplicarlo con el valor medio de la dimensión:"],"metadata":{"id":"O6mdm20vfYwI"}},{"cell_type":"code","source":["df.fillna(df.mean(), inplace=True)\n","print(df.isna().sum())\n","df['Age'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hfBiTlxe-7cJ","executionInfo":{"status":"ok","timestamp":1668553419606,"user_tz":-60,"elapsed":230,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"884b7fe1-5cc4-4118-c911-913b0da2f46d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Name        0\n","PClass      0\n","Age         0\n","Sex         0\n","Survived    0\n","SexCode     0\n","dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/plain":["count    1313.000000\n","mean       30.397989\n","std        10.816758\n","min         0.170000\n","25%        26.000000\n","50%        30.397989\n","75%        30.397989\n","max        71.000000\n","Name: Age, dtype: float64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":[" plt.hist(df['Age'], bins = 20)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"vvfTcU7D_S6O","executionInfo":{"status":"ok","timestamp":1667841905533,"user_tz":-60,"elapsed":997,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"694f0faa-6cda-4303-af92-9f039a651c1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 26.,  16.,  13.,  13.,  28., 107.,  85.,  98., 639.,  40.,  61.,\n","         32.,  43.,  31.,  24.,  17.,  18.,   8.,   9.,   5.]),\n"," array([ 0.17  ,  3.7115,  7.253 , 10.7945, 14.336 , 17.8775, 21.419 ,\n","        24.9605, 28.502 , 32.0435, 35.585 , 39.1265, 42.668 , 46.2095,\n","        49.751 , 53.2925, 56.834 , 60.3755, 63.917 , 67.4585, 71.    ]),\n"," <a list of 20 Patch objects>)"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Vemos cómo ha quedado la variable. "],"metadata":{"id":"aRubCZqsLqKp"}},{"cell_type":"markdown","source":["# Más EDA\n","\n","Vamos a calcular el porcentaje de pasajeros sobrevivientes con respecto a Pclass."],"metadata":{"id":"_ZXnemkLhirZ"}},{"cell_type":"code","source":["df[['PClass', 'Survived']].groupby(['PClass'], as_index=False).sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"eFYnzzzA_hps","executionInfo":{"status":"ok","timestamp":1668553379873,"user_tz":-60,"elapsed":239,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"0e16ce17-ca69-43fb-d183-ed3d23b8e6f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  PClass  Survived\n","0      *         0\n","1    1st       193\n","2    2nd       119\n","3    3rd       138"],"text/html":["\n","  <div id=\"df-56361a9a-e81c-4611-9c0c-7fed63dda004\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PClass</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>*</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1st</td>\n","      <td>193</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2nd</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3rd</td>\n","      <td>138</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56361a9a-e81c-4611-9c0c-7fed63dda004')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-56361a9a-e81c-4611-9c0c-7fed63dda004 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-56361a9a-e81c-4611-9c0c-7fed63dda004');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["¿Cómo calcular el número absoluto de sobrevivientes por `PClass`?"],"metadata":{"id":"XrgYAWwfht34"}},{"cell_type":"markdown","source":["El porcentaje de mujeres supervivientes es mucho mayor que el de hombres."],"metadata":{"id":"JXx9QNAGiTKp"}},{"cell_type":"markdown","source":["Antes de hacer clustering, veamos los tipos de datos de los atributos:"],"metadata":{"id":"l92EkWaNje-m"}},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GQOB2T3cARfj","executionInfo":{"status":"ok","timestamp":1664184507334,"user_tz":-120,"elapsed":53,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"e1778d80-772b-4c10-9f50-b538b4f30937"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1313 entries, 0 to 1312\n","Data columns (total 6 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Name      1313 non-null   object \n"," 1   PClass    1313 non-null   object \n"," 2   Age       1313 non-null   float64\n"," 3   Sex       1313 non-null   object \n"," 4   Survived  1313 non-null   int64  \n"," 5   SexCode   1313 non-null   int64  \n","dtypes: float64(1), int64(2), object(3)\n","memory usage: 61.7+ KB\n"]}]},{"cell_type":"markdown","source":["¿Hay algún tipo extraño?"],"metadata":{"id":"0JzELBC4N6Gu"}},{"cell_type":"markdown","source":["¿Hay algún atributo que no tienen ninguna relación con la supervivencia del pasajero? Nos interesa eliminar(los) del conjunto de entrenamiento: "],"metadata":{"id":"6GeiCGhm9V-Y"}},{"cell_type":"code","source":["df = df.drop(['Name'], axis=1)\n"],"metadata":{"id":"XvPj6AI6BSYw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xe9Z8ujMBfpB","executionInfo":{"status":"ok","timestamp":1668535414391,"user_tz":-60,"elapsed":479,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"eb8be991-35db-49ae-e818-121c322aacd6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1313 entries, 0 to 1312\n","Data columns (total 5 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   PClass    1313 non-null   object \n"," 1   Age       1313 non-null   float64\n"," 2   Sex       1313 non-null   object \n"," 3   Survived  1313 non-null   int64  \n"," 4   SexCode   1313 non-null   int64  \n","dtypes: float64(1), int64(2), object(2)\n","memory usage: 51.4+ KB\n"]}]},{"cell_type":"markdown","source":["¿Hay alguna columna redundante? De las dos, ¿con cuál nos quedamos?"],"metadata":{"id":"VlBrg4DS-oRn"}},{"cell_type":"code","source":["df = df.drop(['Sex'], axis=1)"],"metadata":{"id":"2tvZAEBFByTN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GHxcBD-FB79q","executionInfo":{"status":"ok","timestamp":1664184507337,"user_tz":-120,"elapsed":45,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"bd679951-d3da-4ca2-cd6f-1a12acc6b214"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1313 entries, 0 to 1312\n","Data columns (total 4 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   PClass    1313 non-null   object \n"," 1   Age       1313 non-null   float64\n"," 2   Survived  1313 non-null   int64  \n"," 3   SexCode   1313 non-null   int64  \n","dtypes: float64(1), int64(2), object(1)\n","memory usage: 41.2+ KB\n"]}]},{"cell_type":"code","source":["mapping = {'1st': 1, '2nd': 2, '3rd':3, '*': 4}\n","df = df.replace({'PClass': mapping})\n","df['PClass'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pCaK63amCJ5-","executionInfo":{"status":"ok","timestamp":1668553428702,"user_tz":-60,"elapsed":3,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"929b2667-c3de-413b-845f-7a138e58e68d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 4, 3])"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# Clustering\n","\n","Quitamos la variable clase y convertimos el DataFrame a un arreglo de `numpy`."],"metadata":{"id":"17TuSz1WWLSD"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"F0FqoGIxB_Fk","executionInfo":{"status":"ok","timestamp":1664184517956,"user_tz":-120,"elapsed":324,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"91e67444-8521-4f53-968d-8fb92b5af449"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            PClass          Age     Survived      SexCode\n","count  1313.000000  1313.000000  1313.000000  1313.000000\n","mean      2.297791    30.397989     0.342727     0.351866\n","std       0.837645    10.816758     0.474802     0.477734\n","min       1.000000     0.170000     0.000000     0.000000\n","25%       2.000000    26.000000     0.000000     0.000000\n","50%       3.000000    30.397989     0.000000     0.000000\n","75%       3.000000    30.397989     1.000000     1.000000\n","max       4.000000    71.000000     1.000000     1.000000"],"text/html":["\n","  <div id=\"df-8e40abc3-eb16-4491-b8b1-b59c1e2d7eb0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PClass</th>\n","      <th>Age</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1313.000000</td>\n","      <td>1313.000000</td>\n","      <td>1313.000000</td>\n","      <td>1313.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.297791</td>\n","      <td>30.397989</td>\n","      <td>0.342727</td>\n","      <td>0.351866</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.837645</td>\n","      <td>10.816758</td>\n","      <td>0.474802</td>\n","      <td>0.477734</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.170000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>26.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>30.397989</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>30.397989</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.000000</td>\n","      <td>71.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e40abc3-eb16-4491-b8b1-b59c1e2d7eb0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8e40abc3-eb16-4491-b8b1-b59c1e2d7eb0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8e40abc3-eb16-4491-b8b1-b59c1e2d7eb0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df = df.drop(['Survived'], axis = 1)\n"],"metadata":{"id":"4fPuruFLIYEg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = df.to_numpy(\"float\")\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ak2MCF52Iluv","executionInfo":{"status":"ok","timestamp":1668553431170,"user_tz":-60,"elapsed":4,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"05e4ee96-125c-4b53-88e3-5cd014e52212"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1., 29.,  1.],\n","       [ 1.,  2.,  1.],\n","       [ 1., 30.,  0.],\n","       ...,\n","       [ 3., 22.,  0.],\n","       [ 3., 24.,  0.],\n","       [ 3., 29.,  0.]])"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["- Hacemos clustering k-means con dos clusters. \n","- Comparamos con la clase real. \n"],"metadata":{"id":"obEdLUJpWXRX"}},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","kmeans = KMeans(n_clusters=2)\n","y = kmeans.fit_predict(x)\n","y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ras4WT5EIrm4","executionInfo":{"status":"ok","timestamp":1668553432814,"user_tz":-60,"elapsed":6,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"c86b1712-ea50-453f-b904-af94ffdfb35e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1313,)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df[\"Cluster\"] = y\n","df\n","data = pd.read_csv(\"https://raw.githubusercontent.com/chrisalbon/simulated_datasets/master/titanic.csv\")\n","pd.crosstab(data['Survived'], y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"dvM8olsWJycf","executionInfo":{"status":"ok","timestamp":1668535438642,"user_tz":-60,"elapsed":677,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"93993450-388f-4b87-eaef-550ac8af12d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["col_0       0    1\n","Survived          \n","0         746  117\n","1         366   84"],"text/html":["\n","  <div id=\"df-0f714a26-8db6-472e-9121-3ccbfe02106d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>col_0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>746</td>\n","      <td>117</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>366</td>\n","      <td>84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f714a26-8db6-472e-9121-3ccbfe02106d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0f714a26-8db6-472e-9121-3ccbfe02106d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0f714a26-8db6-472e-9121-3ccbfe02106d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df2 = pd.read_csv(\"https://raw.githubusercontent.com/chrisalbon/simulated_datasets/master/titanic.csv\")\n","pd.crosstab(df2['Survived'], y)"],"metadata":{"id":"kg_mduT5JdgH","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1668535455690,"user_tz":-60,"elapsed":277,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"274b3bcd-9733-432a-d199-a9dce03c9bc6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["col_0       0    1\n","Survived          \n","0         746  117\n","1         366   84"],"text/html":["\n","  <div id=\"df-514085dc-2b5c-4415-bb56-110d5707407f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>col_0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>746</td>\n","      <td>117</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>366</td>\n","      <td>84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-514085dc-2b5c-4415-bb56-110d5707407f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-514085dc-2b5c-4415-bb56-110d5707407f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-514085dc-2b5c-4415-bb56-110d5707407f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2WVzLanDK5bZ","executionInfo":{"status":"ok","timestamp":1668535458674,"user_tz":-60,"elapsed":8,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"3c7e369f-9f44-4505-fb4b-1570c46154fa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1., 29.,  1.],\n","       [ 1.,  2.,  1.],\n","       [ 1., 30.,  0.],\n","       ...,\n","       [ 3., 22.,  0.],\n","       [ 3., 24.,  0.],\n","       [ 3., 29.,  0.]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import MaxAbsScaler\n","scaler = MinMaxScaler(x)\n","x = scaler.fit_transform(x)\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"xZ9XP7D7LWEe","executionInfo":{"status":"error","timestamp":1668535463834,"user_tz":-60,"elapsed":625,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"25aed8e8-c529-4c95-9937-2088b089ecc2"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-8b262a048d71>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mMaxAbsScaler\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mscaler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMinMaxScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mfit_transform\u001b[0;34m(self, X, y, **fit_params)\u001b[0m\n\u001b[1;32m    850\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0my\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    851\u001b[0m             \u001b[0;31m# fit method of arity 1 (unsupervised transformation)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 852\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mfit_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    853\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    854\u001b[0m             \u001b[0;31m# fit method of arity 2 (supervised transformation)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y)\u001b[0m\n\u001b[1;32m    414\u001b[0m         \u001b[0;31m# Reset internal state before fitting\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    415\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 416\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpartial_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    417\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    418\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mpartial_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mpartial_fit\u001b[0;34m(self, X, y)\u001b[0m\n\u001b[1;32m    438\u001b[0m         \"\"\"\n\u001b[1;32m    439\u001b[0m         \u001b[0mfeature_range\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_range\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 440\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0mfeature_range\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mfeature_range\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    441\u001b[0m             raise ValueError(\n\u001b[1;32m    442\u001b[0m                 \u001b[0;34m\"Minimum of desired feature range must be smaller than maximum. Got %s.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()"]}]},{"cell_type":"code","source":["y = KMeans(n_clusters=2).fit_predict(x)\n","pd.crosstab(data['Survived'], y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"cyIyn6jkMFiJ","executionInfo":{"status":"ok","timestamp":1667843074758,"user_tz":-60,"elapsed":876,"user":{"displayName":"Bojan Mihaljevic","userId":"12369130376773817550"}},"outputId":"45c7e52f-0cec-401a-96ef-1d8c0512d253"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["col_0       0    1\n","Survived          \n","0         697  166\n","1         197  253"],"text/html":["\n","  <div id=\"df-22605029-ef14-471d-b8e0-2a8865cf8825\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>col_0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>697</td>\n","      <td>166</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>197</td>\n","      <td>253</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22605029-ef14-471d-b8e0-2a8865cf8825')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-22605029-ef14-471d-b8e0-2a8865cf8825 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-22605029-ef14-471d-b8e0-2a8865cf8825');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["¿Qué tal los resultados? ¿Cuál podría ser la causa?"],"metadata":{"id":"ysnnM02JWd2G"}},{"cell_type":"markdown","source":["Repetimos."],"metadata":{"id":"cmkhd_nlWjJe"}},{"cell_type":"markdown","source":["¿Mejor los resultados?"],"metadata":{"id":"VGXyRdIVWlRw"}},{"cell_type":"markdown","source":["# Supervisado\n","\n"],"metadata":{"id":"k0ZO1JPpPXRq"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/chrisalbon/simulated_datasets/master/titanic.csv\")\n","df = df.drop(['Name'], axis = 1)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LzOvH1OLPjVH","executionInfo":{"status":"ok","timestamp":1668535528060,"user_tz":-60,"elapsed":12,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"8f9a07b0-af7d-44d5-e4ef-3a1ed563d840"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  PClass    Age     Sex  Survived  SexCode\n","0    1st  29.00  female         1        1\n","1    1st   2.00  female         0        1\n","2    1st  30.00    male         0        0\n","3    1st  25.00  female         0        1\n","4    1st   0.92    male         1        0"],"text/html":["\n","  <div id=\"df-3b8b73f5-ed8a-40aa-bf0b-fe7f9eebb1dd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PClass</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","      <th>SexCode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1st</td>\n","      <td>29.00</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1st</td>\n","      <td>2.00</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1st</td>\n","      <td>30.00</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1st</td>\n","      <td>25.00</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1st</td>\n","      <td>0.92</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b8b73f5-ed8a-40aa-bf0b-fe7f9eebb1dd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b8b73f5-ed8a-40aa-bf0b-fe7f9eebb1dd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b8b73f5-ed8a-40aa-bf0b-fe7f9eebb1dd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["## Sin pipeline\n","\n","1. Dividir en train/test\n","2. Imputar missing con sklearn\n","3. Discretizar variables numericas\n","4. Predecir con naive Bayes\n","5. Evaluar la prediccion\n","\n"],"metadata":{"id":"G_BbaK3aPycT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.preprocessing import KBinsDiscretizer\n","from sklearn.model_selection import train_test_split\n","\n","X = df.iloc[:, :4]\n","y = df.iloc[:, 4]\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n"],"metadata":{"id":"-ngMq6DTQOqC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Con pipeline"],"metadata":{"id":"W5VZqb02QMPr"}},{"cell_type":"markdown","source":["# Hierarchical"],"metadata":{"id":"1Xc733CaMySf"}},{"cell_type":"code","source":["from sklearn.cluster import AgglomerativeClustering\n","bottomup = AgglomerativeClustering(linkage='single', n_clusters=3)\n","bottomup.fit_predict(x)"],"metadata":{"id":"4pcXnSK2MwIQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","from scipy.cluster import hierarchy\n","import matplotlib.pyplot as plt\n","Z = hierarchy.linkage(x, 'single')\n","plt.figure()\n","dn = hierarchy.dendrogram(Z, p = 3)\n","\n"],"metadata":{"id":"XqC2JH7NNDCI","executionInfo":{"status":"ok","timestamp":1668535568712,"user_tz":-60,"elapsed":32024,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"270ff8c5-f8d7-420e-f693-9adaad649f6f","colab":{"base_uri":"https://localhost:8080/","height":268}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn import metrics\n","metrics.silhouette_score(x, y, metric='euclidean')"],"metadata":{"id":"TkFbyMWYNZEt","executionInfo":{"status":"ok","timestamp":1667843770938,"user_tz":-60,"elapsed":15,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"a1d3ddc6-3c99-4e5f-cce8-4c3f5704f958","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.43012146696090175"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["metrics.silhouette_samples(x, y, metric='euclidean')"],"metadata":{"id":"zl_XceaiPMFE","executionInfo":{"status":"ok","timestamp":1667843821652,"user_tz":-60,"elapsed":16,"user":{"displayName":"Pablo M.","userId":"08716658997747174273"}},"outputId":"2847c787-4ab1-4541-a418-101fd13137b7","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.3844712 , 0.20058161, 0.31387859, ..., 0.49112556, 0.52067458,\n","       0.58222606])"]},"metadata":{},"execution_count":47}]}]}